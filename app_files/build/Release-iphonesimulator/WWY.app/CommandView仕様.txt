CommandViewの仕様標準化へ
WWYを抜いて、各アプリでこのクラス群をKIT的にインポートし、クラス継承して使えるように。
仕様化に際し、クラスreferenceをAppleのやつみたいに書く。

Ver2で、UIButtonのように、あとからコマンドテキストとアクション（@selector）とアクションへの引数userInfoを加えられる方式にした。
initメソッドもシンプルにした。
「target」と「delegate」の位置づけは以下。
target:アクションを送るターゲットのオブジェクト。nilでもOK。
delegate：delegateプトコルに準拠し、コマンドが選択された場合にコマンドの文字列やコマンドの番号等が送られるオブジェクト。デフォルトはnil。
※delegateはいらないかな？あるいはtargetと同じにしてしまうか。
※targetも、delegateも、アサインされたオブジェクトにretainしない仕様にした。他のcocoaクラスの慣習に従って。なのでtargetやdelegateが破棄されてたところにメッセージ送ったらフリーズする。UIButton等もそう。

touchメソッドは、レスポンダチェインの中で、CommandColumnViewはスルーしてCommandViewが呼ばれるようになってる。
CommandColumnViewが直接呼ばれるようにしようと思ったけど、ドラッグしたらArrowViewがColumnView間を移動する機能が、CommandColumnViewのみではどうしてもできなかった。
(touchesMovedメソッドが、一度touchesEndedするまではずっと最初にtouchesBeganしたViewを呼び続けるため。)

CommandViewのsuperviewをタップすることでキャンセルする仕組みは仕様に入れない。
Objective-C的なクラスとプロトコルの仕様決めだけでは規定できないので。
（superviewのタッチメソッドから"cancel"メソッドをよばなきゃいけないとか。superviewは局面によって変わるし。そういう使い方まで仕様化できない。）
必要ならばクラス継承して実装すればよい。
あと、上記のためキャンセル待ち配列保持も仕様に入れないけど、これはRMQではsuperviewの役目だったが、delegateプロトコルに加えて、delegateで管理すべきだったな。


